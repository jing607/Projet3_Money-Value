{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport ErrorAlert from './ErrorAlert.vue';\nexport default {\n  name: 'RegisterCard',\n  components: {\n    ErrorAlert\n  },\n  data() {\n    return {\n      name: '',\n      email: '',\n      password: '',\n      password_confirm: '',\n      error: [],\n      user: this.$store.state.user\n    };\n  },\n  beforeCreate() {\n    this.user = this.$store.state.user;\n    if (this.user) {\n      this.$router.push('/');\n    }\n  },\n  methods: {\n    async handleSubmit() {\n      // gestionnaire du cliclk sur le bouton d'envoi du formulaire:\n      // si la validation ne passe pas on sort\n      if (!this.validateform()) {\n        return;\n      }\n\n      // on effectue le call api vers le endpoint /sanctum/csrf-cookie pour récup \n      // le jeton csrf\n      try {\n        const csrf = await axios.get('/sanctum/csrf-cookie');\n        // console.log(csrf)\n        if (csrf.status !== 204) {\n          throw new Error('Csrf protection disabled!');\n        }\n\n        // puis on effectue le call api vers le endpoint /register\n        const res = await axios.post('register', {\n          name: this.name.trim(),\n          email: this.email.trim(),\n          password: this.password.trim(),\n          password_confirmation: this.password_confirm.trim()\n        }\n        // {\n        //     headers: {\n        //         'X-XSRF-TOKEN': (() => {\n        //             const name = 'XSRF-TOKEN'\n        //             const cookies = '; ' + document.cookie\n        //             const parts = cookies.split('; ' + name + '=')\n        //             const value = parts.length == 2 ? parts.pop().split(';').shift() : null\n\n        //             console.log('>>> XSRF-TOKEN', value)\n\n        //             return value\n        //         })(),\n        //         'X-Requested-With': 'XMLHttpRequest',\n        //     },\n        // }\n        );\n\n        if (res) {\n          console.log(res);\n        }\n\n        // succes: on redirige vers la page de /login\n        this.$router.push('/login');\n      } catch (e) {\n        // echec: il y a erreur et on l'affiche\n        this.error.push('Error Occured!');\n      }\n    },\n    validateform() {\n      // méthode de validation des données utilisateurs\n      const name = this.name.trim();\n      const email = this.email.trim();\n      const password = this.password.trim();\n      const password_confirmation = this.password_confirm.trim();\n\n      // données non vides\n      if (name === '' || email === '' || password === '' || password_confirmation === '') {\n        this.error.push('All fields must be filled.');\n      }\n\n      // le champ nams: 3 caractères mini\n      if (name.length < 3) {\n        this.error.push('the field NAME must be at least 3 characters long.');\n      }\n\n      // validation d'email\n      if (!this.isValidEmail(email)) {\n        this.error.push('Please enter a valid email.');\n      }\n\n      // password min 5 caractères\n      if (password.length < 5) {\n        this.error.push('Passwords have at least 6 characters');\n      }\n\n      // password et password_confirmation doivent être identiques\n      if (password !== password_confirmation) {\n        this.error.push('Passwords must be identical!');\n      }\n      return !this.error.length;\n    },\n    isValidEmail(email) {\n      // verification d'émail par regexp\n      const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n      return emailRegex.test(email);\n    }\n  },\n  mounted() {\n    // interdit l'acces si 'lutilisateur est loggé\n    if (this.user) {\n      this.$router.push('/');\n    }\n  }\n};","map":{"version":3,"names":["axios","ErrorAlert","name","components","data","email","password","password_confirm","error","user","$store","state","beforeCreate","$router","push","methods","handleSubmit","validateform","csrf","get","status","Error","res","post","trim","password_confirmation","console","log","e","length","isValidEmail","emailRegex","test","mounted"],"sources":["/Users/hj/Desktop/cours/6_Projet3_Money-Value/Projet3_Money-Value/Admin-Vue/front/src/components/login/RegisterCard.vue"],"sourcesContent":["<template>\n    <div class=\"auth-wrapper\">\n      <div class=\"auth-inner\">\n        <form @submit.prevent=\"handleSubmit\">\n            <ErrorAlert v-if=\"error.length\" :error=\"error\" />\n            <h3>Sign up</h3>\n\n            <div class=\"form-group\">\n                <label>Name <span class=\"text-danger\">*</span></label>\n                <input type=\"text\" class=\"form-control\" v-model=\"name\" placeholder=\"First Name\" required>\n            </div>\n            \n            <div class=\"form-group mt-2\">\n                <label>Email <span class=\"text-danger\">*</span></label>\n                <input type=\"email\" class=\"form-control\" v-model=\"email\" placeholder=\"Email\"  required>\n            </div>\n\n            <div class=\"form-group mt-2\">\n                <label>Password <span class=\"text-danger\">*</span></label>\n                <input type=\"password\" class=\"form-control\" v-model=\"password\" placeholder=\"Password\"  required>\n            </div>\n\n            <div class=\"form-group mt-2\">\n                <label>Confirm Password <span class=\"text-danger\">*</span></label>\n                <input type=\"password\" class=\"form-control\" v-model=\"password_confirm\" placeholder=\"Confirm Password\"  required>\n            </div>\n\n            <button class=\"btn btn-primary btn-block mt-3\">Sign Up</button>\n        </form>\n    </div>\n  </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import ErrorAlert from './ErrorAlert.vue';\n\n    export default {\n        name: 'RegisterCard',\n        components: {\n            ErrorAlert\n        },\n        data() {\n            return {\n                name: '',\n                email: '',\n                password: '',\n                password_confirm: '',\n                error: [],\n                user: this.$store.state.user,\n            }\n        },\n        beforeCreate() {\n            this.user = this.$store.state.user\n            if(this.user) {\n                this.$router.push('/')\n            }\n        },\n        methods: {\n            async handleSubmit(){\n                // gestionnaire du cliclk sur le bouton d'envoi du formulaire:\n                // si la validation ne passe pas on sort\n                if(!this.validateform()) {\n                    return;\n                }\n\n                // on effectue le call api vers le endpoint /sanctum/csrf-cookie pour récup \n                // le jeton csrf\n                try {\n                    const csrf = await axios.get('/sanctum/csrf-cookie')\n                    // console.log(csrf)\n                    if(csrf.status !== 204){\n                        throw new Error('Csrf protection disabled!')\n                    }\n\n                    // puis on effectue le call api vers le endpoint /register\n                    const res = await axios.post('register', {\n                        name: this.name.trim(),\n                        email: this.email.trim(),\n                        password: this.password.trim(),\n                        password_confirmation: this.password_confirm.trim(),\n                    }, \n                    // {\n                    //     headers: {\n                    //         'X-XSRF-TOKEN': (() => {\n                    //             const name = 'XSRF-TOKEN'\n                    //             const cookies = '; ' + document.cookie\n                    //             const parts = cookies.split('; ' + name + '=')\n                    //             const value = parts.length == 2 ? parts.pop().split(';').shift() : null\n\n                    //             console.log('>>> XSRF-TOKEN', value)\n\n                    //             return value\n                    //         })(),\n                    //         'X-Requested-With': 'XMLHttpRequest',\n                    //     },\n                    // }\n                    );\n\n                    if(res) {\n                        console.log(res);\n                    }\n\n                    // succes: on redirige vers la page de /login\n                    this.$router.push('/login');\n                }catch (e) {\n                    // echec: il y a erreur et on l'affiche\n                    this.error.push('Error Occured!');\n                }\n            },\n            validateform() {\n                // méthode de validation des données utilisateurs\n                const name = this.name.trim()\n                const email = this.email.trim()\n                const password = this.password.trim()\n                const password_confirmation = this.password_confirm.trim()\n\n                // données non vides\n                if(\n                    name=== '' ||\n                    email === '' ||\n                    password === '' ||\n                    password_confirmation === ''\n                ) {\n                    this.error.push('All fields must be filled.')\n                }\n\n                // le champ nams: 3 caractères mini\n                if(name.length < 3) {\n                    this.error.push('the field NAME must be at least 3 characters long.')\n                }\n                \n                // validation d'email\n                if(!this.isValidEmail(email)) {\n                    this.error.push('Please enter a valid email.')\n                }\n\n                // password min 5 caractères\n                if(password.length < 5) {\n                    this.error.push('Passwords have at least 6 characters')\n                }\n\n                // password et password_confirmation doivent être identiques\n                if(password !== password_confirmation) {\n                    this.error.push('Passwords must be identical!')\n                }\n                \n                return !this.error.length\n\n            },\n            isValidEmail(email) {\n                // verification d'émail par regexp\n                const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n                return emailRegex.test(email);\n            },\n        },\n        mounted() {\n            // interdit l'acces si 'lutilisateur est loggé\n            if(this.user) {\n                this.$router.push('/')\n            }\n        },\n    }\n</script>"],"mappings":";AAkCI,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,UAAS,MAAO,kBAAkB;AAEzC,eAAe;EACXC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHF,IAAI,EAAE,EAAE;MACRG,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,gBAAgB,EAAE,EAAE;MACpBC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF;IAC5B;EACJ,CAAC;EACDG,YAAYA,CAAA,EAAG;IACX,IAAI,CAACH,IAAG,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,IAAG;IACjC,IAAG,IAAI,CAACA,IAAI,EAAE;MACV,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,GAAG;IACzB;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,YAAYA,CAAA,EAAE;MAChB;MACA;MACA,IAAG,CAAC,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;QACrB;MACJ;;MAEA;MACA;MACA,IAAI;QACA,MAAMC,IAAG,GAAI,MAAMlB,KAAK,CAACmB,GAAG,CAAC,sBAAsB;QACnD;QACA,IAAGD,IAAI,CAACE,MAAK,KAAM,GAAG,EAAC;UACnB,MAAM,IAAIC,KAAK,CAAC,2BAA2B;QAC/C;;QAEA;QACA,MAAMC,GAAE,GAAI,MAAMtB,KAAK,CAACuB,IAAI,CAAC,UAAU,EAAE;UACrCrB,IAAI,EAAE,IAAI,CAACA,IAAI,CAACsB,IAAI,CAAC,CAAC;UACtBnB,KAAK,EAAE,IAAI,CAACA,KAAK,CAACmB,IAAI,CAAC,CAAC;UACxBlB,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAACkB,IAAI,CAAC,CAAC;UAC9BC,qBAAqB,EAAE,IAAI,CAAClB,gBAAgB,CAACiB,IAAI,CAAC;QACtD;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;;QAEA;QACA;QACA;QACA;QACA;QACA,CAAC;;QAED,IAAGF,GAAG,EAAE;UACJI,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;QACpB;;QAEA;QACA,IAAI,CAACT,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC/B,CAAC,QAAOc,CAAC,EAAE;QACP;QACA,IAAI,CAACpB,KAAK,CAACM,IAAI,CAAC,gBAAgB,CAAC;MACrC;IACJ,CAAC;IACDG,YAAYA,CAAA,EAAG;MACX;MACA,MAAMf,IAAG,GAAI,IAAI,CAACA,IAAI,CAACsB,IAAI,CAAC;MAC5B,MAAMnB,KAAI,GAAI,IAAI,CAACA,KAAK,CAACmB,IAAI,CAAC;MAC9B,MAAMlB,QAAO,GAAI,IAAI,CAACA,QAAQ,CAACkB,IAAI,CAAC;MACpC,MAAMC,qBAAoB,GAAI,IAAI,CAAClB,gBAAgB,CAACiB,IAAI,CAAC;;MAEzD;MACA,IACItB,IAAI,KAAI,EAAC,IACTG,KAAI,KAAM,EAAC,IACXC,QAAO,KAAM,EAAC,IACdmB,qBAAoB,KAAM,EAAC,EAC7B;QACE,IAAI,CAACjB,KAAK,CAACM,IAAI,CAAC,4BAA4B;MAChD;;MAEA;MACA,IAAGZ,IAAI,CAAC2B,MAAK,GAAI,CAAC,EAAE;QAChB,IAAI,CAACrB,KAAK,CAACM,IAAI,CAAC,oDAAoD;MACxE;;MAEA;MACA,IAAG,CAAC,IAAI,CAACgB,YAAY,CAACzB,KAAK,CAAC,EAAE;QAC1B,IAAI,CAACG,KAAK,CAACM,IAAI,CAAC,6BAA6B;MACjD;;MAEA;MACA,IAAGR,QAAQ,CAACuB,MAAK,GAAI,CAAC,EAAE;QACpB,IAAI,CAACrB,KAAK,CAACM,IAAI,CAAC,sCAAsC;MAC1D;;MAEA;MACA,IAAGR,QAAO,KAAMmB,qBAAqB,EAAE;QACnC,IAAI,CAACjB,KAAK,CAACM,IAAI,CAAC,8BAA8B;MAClD;MAEA,OAAO,CAAC,IAAI,CAACN,KAAK,CAACqB,MAAK;IAE5B,CAAC;IACDC,YAAYA,CAACzB,KAAK,EAAE;MAChB;MACA,MAAM0B,UAAS,GAAI,6CAA6C;MAChE,OAAOA,UAAU,CAACC,IAAI,CAAC3B,KAAK,CAAC;IACjC;EACJ,CAAC;EACD4B,OAAOA,CAAA,EAAG;IACN;IACA,IAAG,IAAI,CAACxB,IAAI,EAAE;MACV,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,GAAG;IACzB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}